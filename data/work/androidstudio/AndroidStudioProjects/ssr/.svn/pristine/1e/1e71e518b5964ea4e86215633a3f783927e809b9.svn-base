package ui.adpter;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.util.Log;
import android.view.Display;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.BaseAdapter;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.example.admin.erp.R;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import Tool.ToolUtils;
import Tool.statistics.Statics;
import http.ExpressBillingManagementHttpPost;
import http.HttpBasePost;
import http.HttpTypeConstants;
import model.javabean.ExpressManagement;
import model.javabean.ProjectAllPageData;
import model.javabean.ResourceGetWXWXPageDataResource;
import ui.activity.ExpressBillingManagementActivity;
import ui.activity.ProjectManagementActivity;
import ui.activity.ResourceManagementActivity;

/**
 * Created by admin on 2017/2/23.
 */

public class SourceManagementAdapter extends BaseAdapter {
    private Activity activity;
    private String id;
    private ExpressBillingManagementHttpPost httpPost;
    private int positions;
    private ViewHolder vh;
    private List<ViewHolder> holders = new ArrayList<ViewHolder>();
    private android.support.v7.app.AlertDialog dlg;
    public SourceManagementAdapter(Activity activity) {
        this.activity = activity;
    }
    @Override
    public int getCount() {
        if (Statics.rgwDataResourcesList!=null&&Statics.rgwDataResourcesList.size()!=0) {
            return Statics.rgwDataResourcesList.get(0).getRows().size();
        } else {
            return 0;
        }
    }
    @Override
    public Object getItem(int position) {
        return position;
    }
    @Override
    public long getItemId(int position) {
        return position;
    }
    @Override
    public View getView(final int position, View convertView, ViewGroup parent) {
        positions = position;
        if (convertView == null) {
            vh = new ViewHolder();
            convertView = LayoutInflater.from(activity).inflate(R.layout.sourcemanagerlist, null);
            //找控件
            vh.number = (TextView) convertView.findViewById(R.id.number);
            vh.name = (TextView) convertView.findViewById(R.id.name);
            vh.sex = (TextView) convertView.findViewById(R.id.sex);
            vh.phone = (TextView) convertView.findViewById(R.id.phone);
            vh.educationalBackground = (TextView) convertView.findViewById(R.id.background);
            vh.details = (TextView) convertView.findViewById(R.id.details);
            vh.history = (TextView) convertView.findViewById(R.id.history);
            convertView.setTag(vh);
            holders.add(vh);
        } else {
            vh = (ViewHolder) convertView.getTag();
        }
        //获取数据和显示数据
        //String number = Integer.toString((ExpressBillingManagementActivity.page-1)*50 + position+1);
        ResourceGetWXWXPageDataResource.RowsBean rgwdResource=Statics.rgwDataResourcesList.get(0).getRows().get(position);
        id = rgwdResource.getId();
        String name = rgwdResource.getName();//名字
        Log.d("SourceManagementAdapter", "名字name" + name);
        String sex = rgwdResource.getSex();//姓别
        String phone = rgwdResource.getContact();//电话号码
        String backgroud = rgwdResource.getEducation();//学历
        vh.number.setText(Integer.toString(++positions));
        vh.number.setGravity(Gravity.CENTER);
        vh.name.setText(name);
        vh.sex.setText(sex);
        vh.phone.setText(phone);
        vh.educationalBackground.setText(backgroud);
        vh.history.setOnClickListener(new Click(position));
        vh.details.setOnClickListener(new Click(position));
        return convertView;
    }
    private void showNormalDialog(final int item) {
            /* @setIcon 设置对话框图标
         * @setTitle 设置对话框标题
         * @setMessage 设置对话框消息提示
         * setXXX方法返回Dialog对象，因此可以链式设置属性
         */
        id = Statics.expressManagementList.get(0).getData().get(0).getRows().get(item).getId();
        AlertDialog.Builder normalDialog =
                new AlertDialog.Builder(activity);
        normalDialog.setIcon(R.drawable.delete);
        normalDialog.setTitle("删除记录");
        normalDialog.setMessage("是否删除该记录?");
        normalDialog.setPositiveButton("确定",
                new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        //...To-do
                        ExpressManagement.DataBean.RowsBean edrb=Statics.expressManagementList.get(0).getData().get(0).getRows().get(item);
                        String sum = edrb.getSum().toString();
                        String classify = edrb.getClassify();
                        String paymentMethod = edrb.getPaymentMethod();
                        Log.d("ExpressManagementAdapte", "jin" + sum + "*" + classify + "*" + paymentMethod);
                        if ("success".equals(httpPost.delAccountManagerHttp(Statics.FinancialBillingManagementSearchUrl, id, sum
                                ,classify,paymentMethod,activity))) {
                            ResourceManagementActivity.progressDialog = ProgressDialog.show(activity, "请稍等...", "获取数据中...", true);//显示进度条
                        } else {
                            Toast.makeText(activity, "删除失败", Toast.LENGTH_SHORT).show();
                        }
                    }
                });
        normalDialog.setNegativeButton("取消",
                new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        //...To-do

                    }
                });
        // 显示
        normalDialog.show();

    }

    public class Click implements View.OnClickListener {
        int item= 0;

        public Click(int position) {
            item= position;
        }

        @Override
        public void onClick(View v) {
            //showNormalDialog(item);
            switch (v.getId()){
                case R.id.history:
                    Toast.makeText(activity, "简历", Toast.LENGTH_SHORT).show();
                    break;
                case R.id.details:
                    detailsDialog(item);
                    break;
            }
        }

    }

    private void detailsDialog(int item) {
        android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder(activity);
        LayoutInflater inflater = ResourceManagementActivity.activity.getLayoutInflater();
        final View layout = inflater.inflate(R.layout.resourcemanager_dialog_detailed_item, null);//获取自定义布局
        TextView name = (TextView) layout.findViewById(R.id.name);//姓名
        TextView employeeId = (TextView) layout.findViewById(R.id.employeeId);//员工编号
        TextView sex = (TextView) layout.findViewById(R.id.sex);//性别
        TextView phone = (TextView) layout.findViewById(R.id.phone);//联系电话
        TextView educationalBackground = (TextView) layout.findViewById(R.id.background);//学历
        TextView idcard = (TextView) layout.findViewById(R.id.idcard);//身份证
        TextView email = (TextView) layout.findViewById(R.id.email);//邮箱
        TextView remark = (TextView) layout.findViewById(R.id.remark);//备注
        ResourceGetWXWXPageDataResource.RowsBean rgwdResource=Statics.rgwDataResourcesList.get(0).getRows().get(item);
        name.setText(rgwdResource.getName());
        employeeId.setText(rgwdResource.getEmployeeId());
        sex.setText(rgwdResource.getSex());
        phone.setText(rgwdResource.getContact());
        educationalBackground.setText(rgwdResource.getEducation());
        idcard.setText(rgwdResource.getIdCard());
        email.setText(rgwdResource.getMail());
        remark.setText(rgwdResource.getDescription());
        //创建人就是用户名
        builder.setView(layout);
        dlg = builder.create();
        dlg.show();
        //dlg.getWindow().setLayout(1500, 1500);
        WindowManager windowManager = ResourceManagementActivity.activity.getWindowManager();
        Display display = windowManager.getDefaultDisplay();
        WindowManager.LayoutParams lp = dlg.getWindow().getAttributes();
        lp.width = (int) (display.getWidth()); //设置宽度
        dlg.getWindow().setAttributes(lp);
    }

    class ViewHolder {
        TextView number, name, sex,  phone, educationalBackground, details,history;
    }
}
