package ui.activity;

import android.app.DatePickerDialog;
import android.app.ProgressDialog;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.os.Bundle;
import android.os.Handler;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.Display;
import android.view.LayoutInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.WindowManager;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import com.example.admin.erp.R;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import Tool.ToolUtils;
import Tool.crash.BaseActivity;
import Tool.statistics.Statics;
import http.ExpressNumberManagementHttpPost;
import portface.LazyLoadFace;
import ui.adpter.ExpressNumberManagementAdapter;
import ui.xlistview.XListView;

/**
 * Created by admin on 2017/3/22.
 */

public class ExpressNumberManagerActivity extends BaseActivity implements XListView.IXListViewListener, LazyLoadFace {
    private ImageView search, add;
    private Spinner typeSpinner, expressPersonSpinner;
    private EditText searchTime;
    private static List<String> data_list;
    public static ArrayAdapter<String> arr_adapter;
    private String typeSpinnerString, expressPersonSpinnerString, billingTimeString;
    public static ExpressNumberManagementAdapter enmAdapter;
    //xList
    public static XListView mListView, expressLv;
    private ArrayAdapter<String> mAdapter;
    private ArrayList<String> items = new ArrayList<>();
    private Handler mHandler;
    private int start = 0;
    private static int refreshCnt = 0;
    public static int page = 1;
    private ExpressNumberManagementHttpPost httpPost;
    private AlertDialog dlg;
    private boolean SearchBoolean = false;
    private Calendar calendar;
    private int currentYear, currentMon, currentDate;
    public static ProgressDialog progressDialog = null;//加载数据显示进度条

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setTitle("业务员揽件量");
        setContentView(R.layout.activity_express_manager);

        //添加返回按钮
        ToolUtils.backButton(this);
        init();
        //空查询
        page = 1;//显示页数
        Log.d("ExpressNumberManagerAct", "test");
        calendar = Calendar.getInstance();
        currentYear = calendar.get(Calendar.YEAR);
        currentMon = calendar.get(Calendar.MONTH) + 1;
        currentDate = calendar.get(Calendar.DAY_OF_MONTH);
        searchTime.setText("          ");
        searchTime.setOnClickListener(this);
        searchTime.setOnLongClickListener(new View.OnLongClickListener() {
            @Override
            public boolean onLongClick(View v) {
                searchTime.setText("          ");
                billingTimeString = "全部";
                return true;
            }
        });
        httpPost = new ExpressNumberManagementHttpPost();
        String httpUrl = Statics.ExpressCountSearch;
        //刚进入页面就要显示数据
        //accountManagementAdapter =new AccountManagementAdapter(getApplicationContext());
        //accountLv.setAdapter(accountManagementAdapter);
        progressDialog = ProgressDialog.show(ExpressNumberManagerActivity.this, "请稍等...", "获取数据中...", true);//显示进度条
        String result = httpPost.searchHttp(httpUrl, "", "", "", ExpressNumberManagerActivity.this, page);
        //accountLv = (XListView) findViewById(R.id.xListView);
        expressLv.setPullLoadEnable(true);
        enmAdapter = new ExpressNumberManagementAdapter(ExpressNumberManagerActivity.this);
        expressLv.setAdapter(enmAdapter);
        expressLv.setXListViewListener(this);
        expressLv.setDivider(new ColorDrawable(Color.BLUE));
        expressLv.setDividerHeight(1);
        mHandler = new Handler();
        spinnerType();
        search.setOnClickListener(this);
        add.setOnClickListener(this);
        expressLv.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                AlertDialog.Builder builder = new AlertDialog.Builder(ExpressNumberManagerActivity.this);
                LayoutInflater inflater = getLayoutInflater();
                final View layout = inflater.inflate(R.layout.expressnumber_dialog_detailed_item, null);//获取自定义布局
                TextView expressMan = (TextView) layout.findViewById(R.id.express_man);//业务员
                TextView type = (TextView) layout.findViewById(R.id.type);//快递类型
                TextView count = (TextView) layout.findViewById(R.id.count);//数量
                TextView billingTime = (TextView) layout.findViewById(R.id.billing_time);//账单时间
                //TextView remark = (TextView) layout.findViewById(R.id.remark);
                expressMan.setText(Statics.enmList.get(position-1).getExpressName());
                type.setText(Statics.enmList.get(position - 1).getType());
                count.setText(Statics.enmList.get(position - 1).getExpressCount());
                billingTime.setText(Statics.enmList.get(position - 1).getBillingTime());
                //remark.setText(Statics.enmList.get(position - 1).getRemark());
                //创建人就是用户名
                builder.setView(layout);
                dlg = builder.create();
                dlg.show();
                //dlg.getWindow().setLayout(1500, 1500);
                WindowManager windowManager = getWindowManager();
                Display display = windowManager.getDefaultDisplay();
                WindowManager.LayoutParams lp = dlg.getWindow().getAttributes();
                lp.width = (int) (display.getWidth()); //设置宽度
                dlg.getWindow().setAttributes(lp);
            }
        });
    }
    //返回按钮事件
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case android.R.id.home:
                this.finish(); // back button
                return true;
        }
        return super.onOptionsItemSelected(item);
    }
    @Override
    public void onClick(View v) {
        super.onClick(v);
        switch (v.getId()) {
            case R.id.searchTime:
                searchTime();
                break;
            case R.id.search:
                //条件查询
                page = 1;
                SearchBoolean = true;
                billingTimeString = searchTime.getText().toString().trim();
                httpPost = new ExpressNumberManagementHttpPost();
                String httpUrl = Statics.ExpressCountSearch;
                String result = httpPost.searchHttp(httpUrl, expressPersonSpinnerString, typeSpinnerString, billingTimeString, ExpressNumberManagerActivity.this, page);
                break;
            case R.id.add:
                Intent in = new Intent(ExpressNumberManagerActivity.this, AddExpressNumberActivity.class);
                startActivity(in);
                break;
        }
    }
    private void spinnerType() {
        Log.d("test", "spinnerType");
        //数据
        //httpPost =new HttpPost();
        //httpPost.accountTypeSearchHttp(Constants.AccountTypeUrl, AccountManagementActivity.this);
        data_list = new ArrayList<>();
        data_list.add("全部");
        for (int i = 0; i < Statics.accountTypeList.size(); i++) {
            data_list.add(Statics.accountTypeList.get(i).getName());
        }
        //适配器
        arr_adapter = new ArrayAdapter<>(getApplicationContext(), R.layout.spinner_display_style, R.id.txtvwSpinner, data_list);
        //设置样式
        arr_adapter.setDropDownViewResource(R.layout.spinner_dropdown_style);
        //加载适配器
        typeSpinner.setAdapter(arr_adapter);
        data_list = null;
        //数据
        //httpPost =new HttpPost();
        //httpPost.accountClassifySearchHttp(Constants.AccountClassifyUrl, AccountManagementActivity.this);
        data_list = new ArrayList<>();
        data_list.add("全部");
        String name;
        for (int i = 0; i < Statics.expressPersonsList.size(); i++) {
            //data_list.add(Constants.expressPersonsList.get(i).getName());
            Log.d("dd", Statics.expressPersonsList.get(i).getName());
            if (Statics.expressPersonsList.get(i).getName().contains("（")) {
                name = Statics.expressPersonsList.get(i).getName().split("（", 2)[0];//字符串以‘（’截取
                data_list.add(name);
            } else if (Statics.expressPersonsList.get(i).getName().contains("(")) {
                name = Statics.expressPersonsList.get(i).getName().split("\\(", 2)[0];//字符串以‘（’截取
                data_list.add(name);
            } else {
                name = Statics.expressPersonsList.get(i).getName();
                data_list.add(name);
            }
           /* name = Constants.expressPersonsList.get(i).getName().split("（", 2)[0];//字符串以‘（’截取
            data_list.add(name);*/
            name = null;
            Log.d("dd", "ddL:" + Statics.expressPersonsList.get(i).getName().split("（", 2)[0]);
        }
        //适配器
        arr_adapter = new ArrayAdapter<>(getApplicationContext(), R.layout.spinner_display_style, R.id.txtvwSpinner, data_list);
        //设置样式
        arr_adapter.setDropDownViewResource(R.layout.spinner_dropdown_style);
        //加载适配器
        expressPersonSpinner.setAdapter(arr_adapter);
        typeSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                if (position == 0) {
                    typeSpinnerString = "全部";
                } else {
                    typeSpinnerString = Statics.accountTypeList.get(--position).getId();
                }
                data_list = null;
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {
            }
        });
        expressPersonSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {

                if (position == 0) {
                    expressPersonSpinnerString = "全部";
                } else {
                    expressPersonSpinnerString = Statics.expressPersonsList.get(--position).getId();
                }
                data_list = null;

            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {
            }
        });
    }
    private void init() {
        search = (ImageView) findViewById(R.id.search);
        add = (ImageView) findViewById(R.id.add);
        typeSpinner = (Spinner) findViewById(R.id.typeSpinner);
        expressPersonSpinner = (Spinner) findViewById(R.id.expressPersonSpinner);
        expressLv = (XListView) findViewById(R.id.xListView);
        searchTime = (EditText) findViewById(R.id.searchTime);
    }
    @Override
    public void onRefresh() {
        mHandler.postDelayed(new Runnable() {
            @Override
            public void run() {
                httpPost = new ExpressNumberManagementHttpPost();
                String httpUrl = Statics.ExpressCountSearch;
                String result = httpPost.searchHttp(httpUrl, expressPersonSpinnerString, typeSpinnerString, billingTimeString, ExpressNumberManagerActivity.this, page);
                onLoad();
            }
        }, 2000);
    }
    @Override
    public void onLoadMore() {
        mHandler.postDelayed(new Runnable() {
            @Override
            public void run() {
                page++;
                if (page >= Statics.page) {
                    page = Statics.page;
                    Toast.makeText(ExpressNumberManagerActivity.this, "已经是最后一页了", Toast.LENGTH_SHORT).show();
                }
                //大于总页数，不向下翻页
                httpPost = new ExpressNumberManagementHttpPost();
                String httpUrl = Statics.ExpressCountSearch;
                Log.d("typeyy", expressPersonSpinnerString + typeSpinnerString + billingTimeString);
                String result = httpPost.searchHttp(httpUrl, expressPersonSpinnerString, typeSpinnerString, billingTimeString, ExpressNumberManagerActivity.this, page);
                enmAdapter.notifyDataSetChanged();
                onLoad();

            }
        }, 2000);
    }
    private void searchTime() {
        //日期选择器
        final Calendar c = Calendar.getInstance();
        int mYear = c.get(Calendar.YEAR);
        int mMonth = c.get(Calendar.MONTH);
        int mDay = c.get(Calendar.DAY_OF_MONTH);
        new DatePickerDialog(ExpressNumberManagerActivity.this,
                new DatePickerDialog.OnDateSetListener() {
                    @Override
                    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {
                        month++;
                        searchTime.setText(String.format("%d-%02d-%02d", year, month, dayOfMonth));
                        billingTimeString = String.format("%d-%02d-%02d", year, month, dayOfMonth);
                    }
                },
                mYear, mMonth, mDay).show();

    }
    @Override
    protected void onResume() {
        super.onResume();
        String httpUrl = Statics.ExpressCountSearch;
        httpPost.searchHttp(httpUrl, "", "", "", ExpressNumberManagerActivity.this, 1);//刷新页面
    }
    private void onLoad() {
        expressLv.stopRefresh();
        expressLv.stopLoadMore();
        expressLv.setRefreshTime("刚刚");
    }
    @Override
    public void AdapterRefresh(String type) {
        switch (type) {
            case "accountManagementAdapter":
                if (enmAdapter != null) {
                    enmAdapter.notifyDataSetChanged();
                    Log.d("test", "页面刷新");
                    progressDialog.dismiss();
                }
                break;
            case "reasonSpinner":
                if (arr_adapter != null) {
                    arr_adapter.notifyDataSetChanged();
                }
                break;
        }
    }
}
