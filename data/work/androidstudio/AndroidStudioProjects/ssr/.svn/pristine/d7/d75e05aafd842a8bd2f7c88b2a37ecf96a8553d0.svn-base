package ui.activity;

import android.app.Activity;
import android.app.DatePickerDialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.os.Handler;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.Display;
import android.view.LayoutInflater;
import android.view.MenuItem;
import android.view.MotionEvent;
import android.view.View;
import android.view.WindowManager;
import android.widget.AbsListView;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.GridView;
import android.widget.Spinner;
import android.widget.TextView;

import com.example.admin.erp.R;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import Tool.ToolUtils;
import Tool.crash.BaseActivity;
import Tool.statistics.Statics;
import biz.ExpressBillingManagerImpl;
import broadcast.FreshenBroadcastReceiver;
import http.ExpressBillingManagementHttpPost;
import http.ExpressNumberManagementHttpPost;
import http.HttpBase;
import http.HttpBasePost;
import http.HttpTypeConstants;
import http.HttpTypeUtil;
import model.ExpressManagement;
import ui.adpter.ExpressManagementAdapter;
import ui.adpter.ProjectManagementAdapter;
import ui.xlistview.XListView;

public class ProjectManagementActivity extends BaseActivity implements XListView.IXListViewListener{
    public static View search;
    private Spinner typeSpinner, classifySpinner;//,reasonSpinner;
    public static Spinner reasonSpinner;
    public static List<String> data_list;
    public static ArrayAdapter<String> arr_adapter;
    private String typeSpinnerString, reasonSpinnerString,billingTimeString;
    private static String classifySpinnerString;
    public static ProjectManagementAdapter projectManagementAdapter;
    public static XListView mListView, projectLv;
    private ArrayAdapter<String> mAdapter;
    private ArrayList<String> items = new ArrayList<>();
    private Handler mHandler;
    private int start = 0;
    private static int refreshCnt = 0;
    public static int page = 1;
    private AlertDialog dlg,dlgMenu;
    public static boolean SearchBoolean = false;
    public static Context context;
    public static ProgressDialog progressDialog = null;//加载数据显示进度条
    static FreshenBroadcastReceiver broadcast;
    private GridView gridView;
    public static boolean deleteSuccess = false;
    public static Activity activity;
    ExpressBillingManagerImpl ebmi = new ExpressBillingManagerImpl();
    private EditText searchTime;
    private Calendar calendar;
    private int currentYear, currentMon, currentDate;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setTitle("项目维护");
        setContentView(R.layout.activity_project_management);

        //添加返回按钮
        ToolUtils.backButton(this);
        context = getApplicationContext();
        activity = ProjectManagementActivity.this;
        initView();
        calendar = Calendar.getInstance();
        currentYear = calendar.get(Calendar.YEAR);
        currentMon = calendar.get(Calendar.MONTH) + 1;
        currentDate = calendar.get(Calendar.DAY_OF_MONTH);
        //searchTime.setText("          ");
        searchTime.setOnClickListener(this);
        searchTime.setOnLongClickListener(new View.OnLongClickListener() {
            @Override
            public boolean onLongClick(View v) {
                searchTime.setCursorVisible(false);
                searchTime.setText("");
                billingTimeString = "全部";
                Drawable nav_up=getResources().getDrawable(R.drawable.date2);
                nav_up.setBounds(0, 0, nav_up.getMinimumWidth(), nav_up.getMinimumHeight());
                searchTime.setCompoundDrawables(null, null, nav_up, null);
                return true;
            }
        });
        //空查询
        page = 1;//显示页数
        //刚进入页面就要显示数据
        //progressDialog = ProgressDialog.show(activity, "请稍等...", "获取数据中...", true);//显示进度条
        HttpBasePost.postHttp(Statics.FinancialSalaryGetWXStaffPayrollListUrls, null, HttpTypeConstants.FinancialSalaryGetWXStaffPayrollListUrlTypes);
        projectLv.setPullLoadEnable(true);
        projectManagementAdapter = new ProjectManagementAdapter(activity);
        projectLv.setAdapter(projectManagementAdapter);
        projectLv.setXListViewListener(this);
        projectLv.setDivider(new ColorDrawable(Color.BLUE));
        projectLv.setDividerHeight(1);
        mHandler = new Handler();
        /*projectLv.setOnItemClickListener(new AdapterView.OnItemClickListener() {//点击时查看详细信息
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                AlertDialog.Builder builder = new AlertDialog.Builder(activity);
                LayoutInflater inflater = getLayoutInflater();
                final View layout = inflater.inflate(R.layout.accountmanager_dialog_detailed_item, null);//获取自定义布局
                TextView type = (TextView) layout.findViewById(R.id.type);//快递类型
                TextView classify = (TextView) layout.findViewById(R.id.classify);//业务分类
                TextView reason = (TextView) layout.findViewById(R.id.reason);//业务类型
                TextView payMethod = (TextView) layout.findViewById(R.id.pay_method);//支付方式
                TextView price = (TextView) layout.findViewById(R.id.price);//金额
                TextView guest = (TextView) layout.findViewById(R.id.guest);//客户
                TextView remark = (TextView) layout.findViewById(R.id.remark);//备注
                TextView createuser = (TextView) layout.findViewById(R.id.createuser);//创建人
                TextView billingTime = (TextView) layout.findViewById(R.id.billingTime);//账单时间
                TextView createTime = (TextView) layout.findViewById(R.id.createTime);//创建时间
                ExpressManagement.DataBean.RowsBean edrb=Statics.expressManagementList.get(0).getData().get(0).getRows().get(position-1);
                type.setText(edrb.getType());
                classify.setText(edrb.getClassify());
                reason.setText(edrb.getReason());
                payMethod.setText(edrb.getPaymentMethod());
                price.setText(edrb.getSum().toString());
                guest.setText(edrb.getCustomerId());
                remark.setText(edrb.getDescription());
                createuser.setText(edrb.getCreateBy());
                int temp = edrb.getBillingTime().getMonth();
                int temps = edrb.getCreateTime().getMonth();
                String billingTimes = ToolUtils.timeDateFormat(Integer.toString(edrb.getBillingTime().getYear()))+"-"+(++temp)
                        +"-"+edrb.getBillingTime().getDate();
                billingTime.setText(billingTimes);
                String createTimes = ToolUtils.timeDateFormat(Integer.toString(edrb.getCreateTime().getYear()))+"-"+(++temps)
                        +"-"+edrb.getCreateTime().getDate()+" "
                        +edrb.getCreateTime().getHours()+":"
                        + edrb.getCreateTime().getMinutes()+":"
                        +edrb.getCreateTime().getSeconds();
                billingTime.setText(billingTimes);
                createTime.setText(createTimes);

                if(!"进账".equals(edrb.getClassify())){
                    type.setTextColor(Color.RED);
                    classify.setTextColor(Color.RED);
                    reason.setTextColor(Color.RED);
                    payMethod.setTextColor(Color.RED);
                    price.setTextColor(Color.RED);
                    guest.setTextColor(Color.RED);
                    remark.setTextColor(Color.RED);
                    createuser.setTextColor(Color.RED);
                    billingTime.setTextColor(Color.RED);
                    createTime.setTextColor(Color.RED);
                    type.setText(edrb.getType().split("<b>")[1].split("</b>")[0]);
                    classify.setText(edrb.getClassify().split("<b>")[1].split("</b>")[0]);
                    reason.setText(edrb.getReason().split("<b>")[1].split("</b>")[0]);
                    payMethod.setText(edrb.getPaymentMethod().split("<b>")[1].split("</b>")[0]);
                    guest.setText(edrb.getCustomerId().split("<b>")[1].split("</b>")[0]);
                    createuser.setText(edrb.getCreateBy().split("<b>")[1].split("</b>")[0]);

                }else {
                    if(edrb.getType().indexOf("<b>")!=-1){
                        type.setText(edrb.getType().split("<b>")[1].split("</b>")[0]);
                    }
                    if(edrb.getClassify().indexOf("<b>")!=-1){
                        classify.setText(edrb.getClassify().split("<b>")[1].split("</b>")[0]);
                    }
                    if (edrb.getReason().indexOf("<b>")!=-1){
                        reason.setText(edrb.getReason().split("<b>")[1].split("</b>")[0]);
                    }
                    if (edrb.getPaymentMethod().indexOf("<b>")!=-1) {
                        payMethod.setText(edrb.getPaymentMethod().split("<b>")[1].split("</b>")[0]);
                    }
                    if (edrb.getCustomerId().indexOf(">")!=-1) {
                        guest.setText(edrb.getCustomerId().split(">")[1].split("</")[0]);
                    }
                    if (edrb.getCreateBy().indexOf("<b>")!=-1) {
                        createuser.setText(edrb.getCreateBy().split("<b>")[1].split("</b>")[0]);
                    }
                }

                //创建人就是用户名
                builder.setView(layout);
                dlg = builder.create();
                dlg.show();
                //dlg.getWindow().setLayout(1500, 1500);
                WindowManager windowManager = getWindowManager();
                Display display = windowManager.getDefaultDisplay();
                WindowManager.LayoutParams lp = dlg.getWindow().getAttributes();
                lp.width = (int) (display.getWidth()); //设置宽度
                dlg.getWindow().setAttributes(lp);
            }
        });*/
        //spinnerType();
    }

    //返回按钮事件
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case android.R.id.home:
                this.finish(); // back button
                return true;
        }
        return super.onOptionsItemSelected(item);
    }

    private void spinnerType() {
        //数据（快递类型：圆通，韵达）
        data_list = new ArrayList<>();
        data_list.add("全部");
        for (int i = 0; i < Statics.accountTypeList.size(); i++) {
            data_list.add(Statics.accountTypeList.get(i).getName());
        }
        //适配器
        arr_adapter = new ArrayAdapter<>(getApplicationContext(), R.layout.spinner_display_style, R.id.txtvwSpinner, data_list);
        //设置样式
        arr_adapter.setDropDownViewResource(R.layout.spinner_dropdown_style);
        //加载适配器
        typeSpinner.setAdapter(arr_adapter);
        data_list = null;

        //数据（业务分类：进账，出账）
        data_list = new ArrayList<>();
        data_list.add("全部");
        for (int i = 0; Statics.expressClassifyList.get(0).getData().size() > 0 && i < Statics.expressClassifyList.get(0).getData().size(); i++) {
            data_list.add(Statics.expressClassifyList.get(0).getData().get(i).getName());
            Log.d("ytpe",Statics.expressClassifyList.get(0).getData().get(i).getName());
        }
        //适配器
        arr_adapter = new ArrayAdapter<>(getApplicationContext(), R.layout.spinner_display_style, R.id.txtvwSpinner, data_list);
        //设置样式
        arr_adapter.setDropDownViewResource(R.layout.spinner_dropdown_style);
        //加载适配器
        classifySpinner.setAdapter(arr_adapter);
        typeSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                Log.v("test8",Integer.toString(position)+"ss");
                if(position == 0){
                    typeSpinnerString = "全部";
                }else{
                    typeSpinnerString = Statics.accountTypeList.get(--position).getId();
                }
                data_list = null;
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {
            }
        });

    }

    private void initView() {
        search = findViewById(R.id.search);
        typeSpinner = (Spinner) findViewById(R.id.typeSpinner);
        classifySpinner = (Spinner) findViewById(R.id.classifySpinner);
        reasonSpinner = (Spinner) findViewById(R.id.reasonSpinner);
        projectLv = (XListView) findViewById(R.id.xListView);
        searchTime = (EditText) findViewById(R.id.searchTime);

        search.setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        super.onClick(v);
        switch (v.getId()) {
            case R.id.searchTime:
                searchTime();
                break;
            case R.id.search:
                //条件查询
                page = 1;
                SearchBoolean = true;
                billingTimeString = searchTime.getText().toString().trim();
                //ebmi.search(activity,Statics.FinancialSalaryGetWXStaffPayrollListUrls,typeSpinnerString,classifySpinnerString,reasonSpinnerString);
                break;
            case R.id.add:
                ebmi.add(activity);
                Intent in = new Intent(activity, AddExpressNumberActivity.class);
                startActivity(in);
                break;
        }

    }

    private void searchTime() {
        //日期选择器
        final Calendar c = Calendar.getInstance();
        int mYear = c.get(Calendar.YEAR);
        int mMonth = c.get(Calendar.MONTH);
        int mDay = c.get(Calendar.DAY_OF_MONTH);
        new DatePickerDialog(activity,
                new DatePickerDialog.OnDateSetListener() {
                    @Override
                    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {
                        month++;
                        searchTime.setText(String.format("%d-%02d-%02d", year, month, dayOfMonth));
                        billingTimeString = String.format("%d-%02d-%02d", year, month, dayOfMonth);
                        searchTime.setCompoundDrawables(null, null, null, null);
                    }
                },
                mYear, mMonth, mDay).show();

    }

    @Override
    public void onRefresh() {//刷新

    }

    @Override
    public void onLoadMore() {//加载更多

    }
}
